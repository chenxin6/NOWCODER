/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
import java.util.ArrayList;
public class Solution {
    public ArrayList<Integer> postorderTraversal(TreeNode root) {
    	ArrayList<TreeNode> stack = new ArrayList<>();
        ArrayList<Integer> list = new ArrayList<>();
        if (root == null) {
        	return list;
        }
        TreeNode temp = new TreeNode(root.val);
        stack.add(temp);
        stack.add(root.right);
        stack.add(root.left);
        while (!stack.isEmpty()) {
        	TreeNode node = stack.remove(stack.size() - 1);
        	if (node == null) {
        		continue;
        	}
        	if (node.left == null && node.right == null) {
        		list.add(node.val);
        	} else {        		
        		temp = new TreeNode(node.val);
                stack.add(temp);
                stack.add(node.right);
                stack.add(node.left);
        	}
        }
        return list;
    }
}