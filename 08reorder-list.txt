/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
import java.util.ArrayList;
public class Solution {
    public void reorderList(ListNode head) {
        ArrayList<ListNode> list = new ArrayList<>();
        if (head == null || head.next == null) {
        	return;
        }
        ListNode temp = head;
        while (temp != null) {
        	list.add(temp);
        	temp = temp.next;
        }
        ListNode result = new ListNode(head.val);
        temp = result;
        for (int i = 1; i < list.size(); i++) {
        	if (i % 2 == 1) {
        		temp.next = list.get(list.size() - (int) Math.ceil((double) i / 2));
        	} else {
        		temp.next = list.get(i / 2);
        	}
        	temp = temp.next;
        }
        temp.next = null;
        head.next = result.next;
    }
}