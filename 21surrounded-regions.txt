public class Solution {
    public void solve(char[][] board) {	
    	if (board.length == 0) {
    		return;
    	}
    	for (int i = 0; i < board[0].length; i++) {
    		if (board[0][i] == 'O') {
    			myMethod(board, 0, i);
    		}
    	}
    	for (int i = 0; i < board[board.length - 1].length; i++) {
    		if (board[board.length - 1][i] == 'O') {
    			myMethod(board, board.length - 1, i);
    		}
    	}
    	for (int i = 0; i < board.length; i++) {
    		if (board[i][0] == 'O') {
    			myMethod(board, i, 0);
    		}
    		if (board[i][board[i].length - 1] == 'O') {
    			myMethod(board, i, board[i].length - 1);
    		}
    	}
    	
        for (int i = 0; i < board.length; i++) {
        	for (int j = 0; j < board[i].length; j++) {
        		if (board[i][j] != '*') {
        			board[i][j] = 'X';
        		} else {
        			board[i][j] = 'O';        			
        		}
        	}
        }
    }
    
    public void myMethod(char[][] board, int i, int j) {
    	board[i][j] = '*';
    	if (i - 1 > 0 && board[i - 1][j] == 'O') {
    		myMethod(board, i - 1, j);
    	}
    	if (i + 1 < board.length && board[i + 1][j] == 'O') {
    		myMethod(board, i + 1, j);
    	}
    	if (j - 1 > 0 && board[i][j - 1] == 'O') {
    		myMethod(board, i, j - 1);    		
    	}
    	if (j + 1 < board[i].length && board[i][j + 1] == 'O') {
    		myMethod(board, i, j + 1);    		    		
    	}
    }
}